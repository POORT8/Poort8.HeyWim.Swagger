{
  "openapi": "3.0.1",
  "info": {
    "description": "Dit is de API-documentatie voor HeyWim Container Tracking, ontwikkeld door [Poort8](https://www.poort8.nl), experts in slimme oplossingen voor datadelen. Met deze API kunt u eenvoudig betrouwbare en gedetailleerde informatie over uw containers integreren in uw eigen systemen. Meer informatie over het product vindt u op [heywim.nl](https://www.heywim.nl).",
    "termsOfService": "https://www.iubenda.com/privacy-policy/19051360/legal?ifr=true&height=800&newmarkup=no",
    "contact": {
      "email": "hello@poort8.nl"
    },
    "title": "Poort8-HeyWim-Tracking",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.poort8.nl/heywim/tracking"
    },
    {
      "url": "https://api.poort8.nl/heywim-preview/tracking"
    }
  ],
  "paths": {
    "/v1/equipment/{companyEndpointName}": {
      "post": {
        "tags": [
          "Tracking"
        ],
        "summary": "/v1/equipment/{companyEndpointName} - POST",
        "description": "Equipment endpoint intended to start tracking a container or BKG document reference. All fields are nullable, but either containerNumber or bkgDocumentReference and shippingCompany is/are obligatory. If not provided, a 400 Bad Request response will be given. When tracking a containerNumber with shippingCompany not provided, tracking your container will take significantly longer to initialize.",
        "operationId": "post-v1-equipment-companyendpointname",
        "parameters": [
          {
            "name": "companyEndpointName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomerContainerDto"
                }
              },
              "example": [
                {
                  "containerNumber": "string",
                  "bkgDocumentReference": "string",
                  "shippingCompany": "string",
                  "billOfLading": "string",
                  "houseBillOfLading": "string",
                  "shipName": "string",
                  "shipEtdOrigin": "string",
                  "shipEtaDestination": "string",
                  "shipEtdDestination": "string",
                  "terminal": "string",
                  "file": "string",
                  "reference": "string",
                  "relationNumber": "string",
                  "relationName": "string",
                  "portOfLoad": "string",
                  "portOfDischarge": "string",
                  "sizeType": "string",
                  "transportType": "string",
                  "inlandModality": "string",
                  "inlandTerminal": "string",
                  "inlandTerminalReference": "string"
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerContainerDtoCrudResponse"
                  }
                },
                "example": [
                  {
                    "created": true,
                    "updated": true,
                    "deleted": true,
                    "errorMessage": "string",
                    "httpStatusCode": 0,
                    "validationErrors": [
                      {
                        "property": "string",
                        "value": "string",
                        "error": "string"
                      }
                    ],
                    "result": {
                      "containerNumber": "string",
                      "bkgDocumentReference": "string",
                      "shippingCompany": "string",
                      "billOfLading": "string",
                      "houseBillOfLading": "string",
                      "shipName": "string",
                      "shipEtdOrigin": "string",
                      "shipEtaDestination": "string",
                      "shipEtdDestination": "string",
                      "terminal": "string",
                      "file": "string",
                      "reference": "string",
                      "relationNumber": "string",
                      "relationName": "string",
                      "portOfLoad": "string",
                      "portOfDischarge": "string",
                      "sizeType": "string",
                      "transportType": "string",
                      "inlandModality": "string",
                      "inlandTerminal": "string",
                      "inlandTerminalReference": "string"
                    }
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "statusCode": 0,
                  "message": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "statusCode": 0,
                  "message": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "statusCode": 0,
                  "message": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/events/{companyEndpointName}": {
      "get": {
        "tags": [
          "Tracking"
        ],
        "summary": "/v1/events/{companyEndpointName} - GET",
        "description": "Events endpoint to get events for certain container(s) and/or BKG document references. Events datamodel according to [DCSA OpenAPI specification for Track & Trace 3.0.0-Beta-1](https://app.swaggerhub.com/apis/dcsaorg/DCSA_TNT/3.0.0-Beta-1). This endpoint may produce a FeederTransportCall. This type of transport event, along with a feeder as a mode of transport/ModeOfTransport enum, is not a DCSA standard. Feeder transport events were implemented for clarity reasons.",
        "operationId": "get-v1-events-companyendpointname",
        "parameters": [
          {
            "name": "companyEndpointName",
            "in": "path",
            "description": "Company endpoint name for which the events are requested",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "equipmentReference",
            "in": "query",
            "description": "Array of container numbers for which events will be returned.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "documentTypeCodes",
            "in": "query",
            "description": "Array of documentTypeCodes for which events will be returned. Only support for BKG and only in combination with documentReference.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "documentReference",
            "in": "query",
            "description": "Array of document references for which events will be returned. Only support for BKG document references (carrier booking numbers) and only in combination with documentTypeCodes containing BKG.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.1.0#/components/schemas/event"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/milestones/{companyEndpointName}": {
      "get": {
        "tags": [
          "Tracking"
        ],
        "summary": "/v1/milestones/{companyEndpointName} - GET",
        "description": "Milestones endpoint to get milestones for certain container(s). The milestones endpoint is still under development. It is possible that fields are added to the response object without further notice and these are not considered as breaking changes. Field name changes or deletions are seen as breaking changes and you will be informed in time.",
        "operationId": "get-v1-milestones-companyendpointname",
        "parameters": [
          {
            "name": "companyEndpointName",
            "in": "path",
            "description": "Company name for which the milestones are requested",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "equipmentReference",
            "in": "query",
            "description": "Array of container numbers for which the milestones will be returned.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "documentTypeCodes",
            "in": "query",
            "description": "Array of documentTypeCodes for which the milestones will be returned. Only support for BKG and only in combination with documentReference.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "documentReference",
            "in": "query",
            "description": "Array of document references for which the milestones will be returned. Only support for BKG document references (carrier booking numbers) and only in combination with documentTypeCodes containing BKG.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Milestones"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "statusCode": 0,
                  "message": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "statusCode": 0,
                  "message": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "statusCode": 0,
                  "message": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/equipment-validate": {
      "post": {
        "tags": [
          "Tracking"
        ],
        "summary": "/v1/equipment-validate - POST",
        "operationId": "post-v1-equipment-validate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomerContainerDto"
                }
              },
              "example": [
                {
                  "containerNumber": "string",
                  "bkgDocumentReference": "string",
                  "shippingCompany": "string",
                  "billOfLading": "string",
                  "houseBillOfLading": "string",
                  "shipName": "string",
                  "shipEtdOrigin": "string",
                  "shipEtaDestination": "string",
                  "shipEtdDestination": "string",
                  "terminal": "string",
                  "file": "string",
                  "reference": "string",
                  "relationNumber": "string",
                  "relationName": "string",
                  "portOfLoad": "string",
                  "portOfDischarge": "string",
                  "sizeType": "string",
                  "transportType": "string",
                  "inlandModality": "string",
                  "inlandTerminal": "string",
                  "inlandTerminalReference": "string"
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerContainerDtoCrudResponse"
                  }
                },
                "example": [
                  {
                    "created": true,
                    "updated": true,
                    "deleted": true,
                    "errorMessage": "string",
                    "httpStatusCode": 0,
                    "validationErrors": [
                      {
                        "property": "string",
                        "value": "string",
                        "error": "string"
                      }
                    ],
                    "result": {
                      "containerNumber": "string",
                      "bkgDocumentReference": "string",
                      "shippingCompany": "string",
                      "billOfLading": "string",
                      "houseBillOfLading": "string",
                      "shipName": "string",
                      "shipEtdOrigin": "string",
                      "shipEtaDestination": "string",
                      "shipEtdDestination": "string",
                      "terminal": "string",
                      "file": "string",
                      "reference": "string",
                      "relationNumber": "string",
                      "relationName": "string",
                      "portOfLoad": "string",
                      "portOfDischarge": "string",
                      "sizeType": "string",
                      "transportType": "string",
                      "inlandModality": "string",
                      "inlandTerminal": "string",
                      "inlandTerminalReference": "string"
                    }
                  }
                ]
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiError": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerContainerDto": {
        "type": "object",
        "properties": {
          "containerNumber": {
            "type": "string",
            "nullable": true
          },
          "bkgDocumentReference": {
            "type": "string",
            "nullable": true
          },
          "shippingCompany": {
            "type": "string",
            "nullable": true
          },
          "billOfLading": {
            "type": "string",
            "nullable": true
          },
          "houseBillOfLading": {
            "type": "string",
            "nullable": true
          },
          "shipName": {
            "type": "string",
            "nullable": true
          },
          "shipEtdOrigin": {
            "type": "string",
            "nullable": true
          },
          "shipEtaDestination": {
            "type": "string",
            "nullable": true
          },
          "shipEtdDestination": {
            "type": "string",
            "nullable": true
          },
          "terminal": {
            "type": "string",
            "nullable": true
          },
          "file": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "relationNumber": {
            "type": "string",
            "nullable": true
          },
          "relationName": {
            "type": "string",
            "nullable": true
          },
          "portOfLoad": {
            "type": "string",
            "nullable": true
          },
          "portOfDischarge": {
            "type": "string",
            "nullable": true
          },
          "sizeType": {
            "type": "string",
            "nullable": true
          },
          "transportType": {
            "type": "string",
            "nullable": true
          },
          "inlandModality": {
            "type": "string",
            "nullable": true
          },
          "inlandTerminal": {
            "type": "string",
            "nullable": true
          },
          "inlandTerminalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerContainerDtoCrudResponse": {
        "type": "object",
        "properties": {
          "created": {
            "type": "boolean"
          },
          "updated": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "httpStatusCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "validationErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "nullable": true
          },
          "result": {
            "$ref": "#/components/schemas/CustomerContainerDto"
          }
        },
        "additionalProperties": false
      },
      "EquipmentEvent": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.1.0#/components/schemas/metadata"
          },
          "payload": {
            "$ref": "https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.1.0#/components/schemas/equipmentPayload"
          }
        },
        "additionalProperties": false
      },
      "Milestones": {
        "type": "object",
        "properties": {
          "fileNumber": {
            "type": "string",
            "description": "Identifying number of the milestones object. Typically a container number, but sometimes another reference such as booking number can be used.",
            "example": "ABCU1234567"
          },
          "containerNumber": {
            "type": "string",
            "description": "Container number of the milestones object.",
            "nullable": true,
            "example": "ABCU1234567"
          },
          "carrier": {
            "enum": [
              "AKS",
              "CMA",
              "COS",
              "EVG",
              "HLC",
              "HMM",
              "MSK",
              "MSC",
              "ONE",
              "OOL",
              "YML",
              "ZIM"
            ],
            "type": "string",
            "description": "Shipping company for the main voyage of the milestones object.",
            "nullable": true
          },
          "gateOutEmptyFromDepot": {
            "allOf": [
              {
                "description": "Represents when the container is gated out from the depot while empty, typically for transportation by truck. This milestone is derived by identifying the earliest GTOT event for an empty container at a DEPO facility before the journey starts."
              },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/EquipmentEvent"
              }
            ]
          },
          "loadEmptyAtDepot": {
            "allOf": [
              {
                "description": "Indicates the loading of an empty container at the depot, typically for transportation by train or barge. This milestone is derived by identifying the earliest LOAD event for an empty container at a DEPO facility before the journey starts."
              },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/EquipmentEvent"
              }
            ]
          },
          "departureEmptyFromDepot": {
            "allOf": [
              {
                "description": "Marks the departure of a container laden on a train or barge from the depot. This milestone is derived by finding the earliest DEPA event for an empty container at a DEPO facility before the journey starts."
              },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/TransportEvent"
              }
            ]
          },
          "gateInAtInlandTerminalOrigin": {
            "allOf": [
              {
                "description": "Represents when the container is gated in at the inland terminal of origin, typically after transportation by truck. This milestone is derived by identifying the earliest GTIN event for a laden container at an INTE facility before the vessel journey starts."
              },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/EquipmentEvent"
              }
            ]
          },
          "loadAtInlandTerminalOrigin": {
            "allOf": [
              {
                "description": "Indicates the loading of the container at the inland terminal of origin, typically onto a train or barge. This milestone is derived by identifying the earliest LOAD event for a laden container at an INTE facility before the vessel journey starts."
              },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/EquipmentEvent"
              }
            ]
          },
          "departureFromInlandTerminalOrigin": {
            "allOf": [
              {
                "description": "Marks the departure of the container from the inland terminal of origin to a deepsea terminal, typically by train or barge. This milestone is derived by finding the earliest DEPA event at an INTE facility before the vessel journey starts."
              },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/TransportEvent"
              }
            ]
          },
          "gateInAtDeepseaTerminalOrigin": {
            "allOf": [
              {
                "description": "Represents when the container is gated in at the deepsea terminal of origin, typically after transportation by truck when no inland terminal was used. This milestone is derived by identifying the earliest GTIN event for a laden container at a POTE facility before the vessel journey starts."
              },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/EquipmentEvent"
              }
            ]
          },
          "arrivalAtDeepseaTerminalOrigin": {
            "allOf": [
              {
                "description": "Indicates the arrival of the container at the deepsea terminal of origin, typically after transportation by train or barge from an inland terminal. This milestone is derived by finding the earliest ARRI event at a POTE facility before the vessel journey starts, excluding mode of transport VESSEL."
              },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/TransportEvent"
              }
            ]
          },
          "dischargeAtDeepseaTerminalOrigin": {
            "allOf": [
              {
                "description": "Marks the discharge of the container at the deepsea terminal of origin, typically from a train or barge. This milestone is derived by finding the earliest DISC event for a laden container at a POTE facility before the vessel journey starts."
              },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/EquipmentEvent"
              }
            ]
          },
          "loadAtDeepseaTerminalOrigin": {
            "allOf": [
              {
                "description": "Represents the loading of the container onto a vessel at the deepsea terminal of origin. This milestone is derived by identifying the earliest LOAD event for a laden container at a POTE facility before the vessel departure."
              },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/EquipmentEvent"
              }
            ]
          },
          "vesselArrivalOrigin": {
            "allOf": [
              {
                "description": "Indicates the arrival of the vessel at the origin terminal. This milestone is derived by finding the latest ARRI event at a POTE facility, filtered by mode of transport VESSEL, before the vessel journey starts."
              },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/TransportEvent"
              }
            ]
          },
          "cargoOpeningAtDeepseaTerminalOrigin": {
            "allOf": [
              {
                "description": "Indicates the cargo opening time at the origin deepsea terminal. This milestone is derived by finding the SHIPMENT event with document type code DEI (Delivery instructions) and document reference EFC (Earliest full-container delivery date)."
              },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/ShipmentEvent"
              }
            ]
          },
          "cargoClosingAtDeepseaTerminalOrigin": {
            "allOf": [
              {
                "description": "Indicates the cargo closing time at the origin deepsea terminal. This milestone is derived by finding the SHIPMENT event with document type code DEI (Delivery instructions) and document reference FCO (FCL delivery cut-off)."
              },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/ShipmentEvent"
              }
            ]
          },
          "vesselDepartureOrigin": {
            "allOf": [
              {
                "description": "Marks the departure of the vessel from the origin terminal with the container on board. This milestone is derived by identifying the earliest DEPA event at a POTE facility for the container journey, filtered by mode of transport VESSEL and only considering CA or TR publisher types. This is considered the start of the vessel journey."
              },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/TransportEvent"
              }
            ]
          },
          "vesselArrivalDestination": {
            "allOf": [
              {
                "description": "Represents the arrival of the vessel at the destination terminal with the container on board. This milestone is derived by identifying the latest ARRI event at a POTE facility for the container journey, filtered by mode of transport VESSEL and only considering CA or TR publisher types. This is considered the vessel's arrival."
              },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/TransportEvent"
              }
            ]
          },
          "vesselDepartureDestination": {
            "allOf": [
              {
                "description": "Marks the departure of the vessel from the destination terminal. This milestone is derived by finding the earliest DEPA event at a POTE facility after the vessel's arrival, filtered by mode of transport VESSEL."
              },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/TransportEvent"
              }
            ]
          },
          "dischargeAtDeepseaTerminalDestination": {
            "allOf": [
              {
                "description": "Indicates the discharge of the container from the vessel at the deepsea terminal of destination. This milestone is derived by identifying the earliest DISC event for a laden container at a POTE facility after the vessel's arrival."
              },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/EquipmentEvent"
              }
            ]
          },
          "gateOutFromDeepseaTerminalDestination": {
            "allOf": [
              {
                "description": "Represents when the container is gated out from the deepsea terminal of destination, typically for transportation by truck. This milestone is derived by finding the earliest GTOT event for a laden container at a POTE facility after the vessel's arrival."
              },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/EquipmentEvent"
              }
            ]
          },
          "loadAtDeepseaTerminalDestination": {
            "allOf": [
              {
                "description": "Marks the loading of the container at the deepsea terminal of destination, typically onto a train or barge. This milestone is derived by identifying the earliest LOAD event for a laden container at a POTE facility after the vessel's arrival."
              },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/EquipmentEvent"
              }
            ]
          },
          "departureFromDeepseaTerminalDestination": {
            "allOf": [
              {
                "description": "Indicates the departure of the container from the deepsea terminal of destination, typically by train or barge. This milestone is derived by finding the earliest DEPA event at a POTE facility after the vessel's arrival, excluding mode of transport VESSEL."
              },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/TransportEvent"
              }
            ]
          },
          "arrivalAtInlandTerminalDestination": {
            "allOf": [
              {
                "description": "Represents the arrival of the container laden on a train or barge at the inland terminal of destination. This milestone is derived by finding the earliest ARRI event at an INTE facility after the vessel's arrival."
          },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/TransportEvent"
              }
            ]
          },
          "dischargeAtInlandTerminalDestination": {
            "allOf": [
              {
                "description": "Marks the discharge of the container at the inland terminal of destination, typically from a train or barge. This milestone is derived by identifying the earliest DISC event for a laden container at an INTE facility after the vessel's arrival."
          },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/EquipmentEvent"
          }
            ]
        },
          "gateOutFromInlandTerminalDestination": {
            "allOf": [
              {
                "description": "Indicates when the container is gated out from the inland terminal of destination, typically for transportation by truck. This milestone is derived by finding the earliest GTOT event for a laden container at an INTE facility after the vessel's arrival."
      },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/EquipmentEvent"
          }
            ]
        },
          "gateInEmptyAtDepot": {
            "allOf": [
              {
                "description": "Represents when the container is gated in at the depot while empty, typically after transportation by truck. This milestone is derived by identifying the earliest GTIN event for an empty container at a DEPO facility after the vessel's arrival."
      },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/EquipmentEvent"
              }
            ]
          },
          "arrivalEmptyAtDepot": {
            "allOf": [
              {
                "description": "Indicates the arrival of an empty container on a train or barge at the depot. This milestone is derived by finding the earliest ARRI event at a DEPO facility after the vessel's arrival."
          },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/TransportEvent"
              }
            ]
          },
          "dischargeEmptyAtDepot": {
            "allOf": [
              {
                "description": "Marks the discharge of an empty container at the depot, typically from a train or barge. This milestone is derived by identifying the earliest DISC event for an empty container at a DEPO facility after the vessel's arrival."
          },
              {
            "nullable": true
          },
              {
                "$ref": "#/components/schemas/EquipmentEvent"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ShipmentEvent": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.1.0#/components/schemas/metadata"
          },
          "payload": {
            "$ref": "https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.1.0#/components/schemas/shipmentPayload"
          }
        },
        "additionalProperties": false
      },
      "TransportEvent": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.1.0#/components/schemas/metadata"
          },
          "payload": {
            "$ref": "https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.1.0#/components/schemas/transportPayload"
          }
        },
        "additionalProperties": false
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "property": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "apiKeyHeader": {
        "type": "apiKey",
        "name": "api-key",
        "in": "header"
      },
      "apiKeyQuery": {
        "type": "apiKey",
        "name": "api-key",
        "in": "query"
      }
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    },
    {
      "apiKeyQuery": []
    }
  ]
}